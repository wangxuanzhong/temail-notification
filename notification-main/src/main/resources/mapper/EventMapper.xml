<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.syswin.temail.notification.main.infrastructure.EventMapper">
  <resultMap id="EventMap" type="com.syswin.temail.notification.main.domains.Event">
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="x_packet_id" jdbcType="VARCHAR" property="xPacketId"/>
    <result column="event_seq_id" jdbcType="BIGINT" property="eventSeqId"/>
    <result column="event_type" jdbcType="INTEGER" property="eventType"/>
    <result column="msg_id" jdbcType="VARCHAR" property="msgId"/>
    <result column="parent_msg_id" jdbcType="VARCHAR" property="parentMsgId"/>
    <result column="from" jdbcType="VARCHAR" property="from"/>
    <result column="to" jdbcType="VARCHAR" property="to"/>
    <result column="group_temail" jdbcType="VARCHAR" property="groupTemail"/>
    <result column="temail" jdbcType="VARCHAR" property="temail"/>
    <result column="extend_param" jdbcType="VARCHAR" property="extendParam"/>
    <result column="timestamp" jdbcType="BIGINT" property="timestamp"/>
  </resultMap>

  <sql id="baseField">
    `id`, `x_packet_id`, `event_seq_id`, `event_type`, `msg_id`, `parent_msg_id`, `from`, `to`, `group_temail`, `temail`, `extend_param`, `timestamp`
  </sql>

  <insert id="insert" parameterType="com.syswin.temail.notification.main.domains.Event">
    INSERT INTO `event`
    (`x_packet_id`, `event_seq_id`, `event_type`, `msg_id`, `parent_msg_id`, `from`, `to`, `group_temail`, `temail`, `extend_param`, `timestamp`)
    VALUES
    (#{xPacketId}, #{eventSeqId}, #{eventType}, #{msgId}, #{parentMsgId}, #{from}, #{to}, #{groupTemail}, #{temail}, #{extendParam}, #{timestamp})
  </insert>

  <select id="selectEvents" resultMap="EventMap">
    SELECT
    <include refid="baseField"/>
    FROM `event`
    WHERE
    <choose>
      <when test="parentMsgId == null or parentMsgId == ''">
        (parent_msg_id IS NULL OR parent_msg_id = '')
      </when>
      <otherwise>
        parent_msg_id = #{parentMsgId}
      </otherwise>
    </choose>
    <if test="to != null and to != ''">AND `to` = #{to}</if>
    <if test="begin != null">AND event_seq_id > #{begin}</if>
    <if test="end != null">AND event_seq_id <![CDATA[<=]]> #{end}</if>
    ORDER BY `event_seq_id`
  </select>

  <select id="selectEventsByMsgId" parameterType="com.syswin.temail.notification.main.domains.Event" resultMap="EventMap">
    SELECT
    <include refid="baseField"/>
    FROM `event`
    WHERE `event_type` = #{eventType} AND `msg_id` = #{msgId}
    <if test="from != null and from != ''">AND `from` = #{from}</if>
    <if test="to != null and to != ''">AND `to` = #{to}</if>
  </select>

  <select id="selectResetEvents" parameterType="com.syswin.temail.notification.main.domains.Event" resultType="java.lang.Long">
    SELECT `id` FROM `event`
    WHERE `event_type` = #{eventType} AND `from` = #{from} AND `to` = #{to} AND event_seq_id <![CDATA[<]]> #{eventSeqId}
    <if test="groupTemail != null and groupTemail != ''">AND `group_temail` = #{groupTemail}</if>
  </select>

  <delete id="delete" parameterType="com.syswin.temail.notification.main.domains.Event">
    DELETE FROM `event`
    WHERE `id` IN (
    <foreach collection="list" index="index" item="item" separator=",">
      #{item}
    </foreach>
    )
  </delete>

  <select id="checkUnique" parameterType="com.syswin.temail.notification.main.domains.Event" resultMap="EventMap">
    SELECT
    <include refid="baseField"/>
    FROM `event`
    WHERE `x_packet_id` = #{xPacketId} AND `event_type` = #{eventType}
    <if test="groupTemail != null and groupTemail != ''">AND `group_temail` = #{groupTemail}</if>
    <if test="temail != null and temail != ''">AND `temail` = #{temail}</if>
  </select>


  <!-- 清除历史数据功能所用sql -->
  <select id="selectOldTo" parameterType="java.time.LocalDateTime" resultType="java.lang.String">
    SELECT DISTINCT(`to`) FROM `event` WHERE `create_timestamp` <![CDATA[<]]> #{createTime}
  </select>

  <select id="selectOldEvent" resultMap="EventMap">
    SELECT
    <include refid="baseField"/>
    FROM `event`
    WHERE `to` = #{to} AND `create_timestamp` <![CDATA[<]]> #{createTime}
    ORDER BY `event_seq_id`
  </select>

  <delete id="deleteOldEvent" parameterType="java.time.LocalDateTime">
    DELETE FROM `event` WHERE `create_timestamp` <![CDATA[<]]> #{createTime}
  </delete>
  <!-- end -->
</mapper>